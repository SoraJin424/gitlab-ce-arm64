name: Build Docker Image

on:
  schedule:
    - cron: '0 3 * * *'

  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:        
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: test
        run: |
          echo $(git tag)

      # - name: Installing Dependencies
      #   run: |
      #     sudo apt-get install -y jq curl git
      #     git config user.name 'github-actions[bot]'
      #     git config user.email 'github-actions[bot]@users.noreply.github.com'

      # - name: Get Gitlab CE Version
      #   id: get_gitlab_ce_version
      #   run: |
      #     GITLAB_VERSION=$(curl -k -s https://api.rua.dev/versions/latest/gitlab | jq .data.version | sed s/\"//g)
      #     echo $GITLAB_VERSION
      #     echo "gitlab_ce_version=$GITLAB_VERSION" >> $GITHUB_OUTPUT
        
      # - name: Check Gitlab CE Version
      #   id: check_gitlab_ce_version
      #   if: steps.get_gitlab_ce_version.outputs.gitlab_ce_version != ''
      #   run: |
      #     HAVE_TAG=false
      #     GITLAB_CE_VERSION=${{ steps.get_gitlab_ce_version.outputs.gitlab_ce_version }}
      #     for tag in $(git tag); do
      #       echo $tag
      #       if [  "$GITLAB_CE_VERSION" == "$tag" ]; then
      #         HAVE_TAG=true
      #       fi
      #     done

      #     echo $HAVE_TAG

      #     if ! $HAVE_TAG; then
      #       git tag ${{ steps.get_gitlab_ce_version.outputs.gitlab_ce_version }}
      #       git push --tags
      #       echo "latest_gitlab_ce_version=${{ steps.get_gitlab_ce_version.outputs.gitlab_ce_version }}" >> $GITHUB_OUTPUT
      #     fi

      # - name: Gen RELEASE
      #   id: gen_release
      #   if: steps.check_gitlab_ce_version.outputs.latest_gitlab_ce_version != ''
      #   run: |
      #     echo "PACKAGECLOUD_REPO=gitlab-ce" > ./RELEASE
      #     echo "RELEASE_PACKAGE=gitlab-ce" >> ./RELEASE
      #     echo "RELEASE_VERSION=${{ steps.check_gitlab_ce_version.outputs.latest_gitlab_ce_version }}-ce.0" >> ./RELEASE
      #     echo "DOWNLOAD_URL=https://packages.gitlab.com/gitlab/gitlab-ce/packages/ubuntu/focal/gitlab-ce_${{ steps.check_gitlab_ce_version.outputs.latest_gitlab_ce_version }}-ce.0_arm64.deb/download.deb" >> ./RELEASE
          
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   if: steps.check_gitlab_ce_version.outputs.latest_gitlab_ce_version != ''
      #   with:
      #     file: ./Dockerfile
      #     context: .
      #     platforms: linux/arm64
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKER_NS }}/gitlab-ce-arm64:${{ steps.check_gitlab_ce_version.outputs.latest_gitlab_ce_version }}-ce.0
      #       ${{ secrets.DOCKER_NS }}/gitlab-ce-arm64:latest
